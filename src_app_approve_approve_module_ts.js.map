{"version":3,"file":"src_app_approve_approve_module_ts.js","mappings":"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","sources":["./src/app/approve/approve-routing.module.ts","./src/app/approve/approve.module.ts","./src/app/approve/approve.page.ts","./src/app/approve/approve.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ApprovePage } from './approve.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApprovePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ApprovePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApprovePageRoutingModule } from './approve-routing.module';\n\nimport { ApprovePage } from './approve.page';\nimport { DatePipe } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ApprovePageRoutingModule\n  ],\n  providers: [\n    DatePipe, // Add DatePipe to the providers array\n    // your other services or providers\n  ],\n  declarations: [ApprovePage]\n})\nexport class ApprovePageModule {}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../services/data.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-approve',\n  templateUrl: './approve.page.html',\n  styleUrls: ['./approve.page.scss'],\n})\nexport class ApprovePage implements OnInit {\n  isCancelEnabled: boolean = false;\n\n\n\n  getindividualdata:Observable<any>;\n  getindividualdataRes:any=[];\n\n  private approveData: Observable<any>;\n  public approveRes:any=[];\n\n  private rejectData: Observable<any>;\n  public rejectRes:any=[];\n\n  private cancelData: Observable<any>;\n  public cancelRes:any=[];\n\n\n  getcount:any;\n\n  leaveId:any;\n  Oid:any;\n  Uid:any;\n\n \n  userId:any;\n  orgId;\n \n  public resConfig:any=[];\n  approval_comment:string='';\n  \n  \n \n  leavemngtUrl: any;\n  supervisorStatus:any;\n  imageSrc: SafeUrl;\n  constructor(private activatedRoute: ActivatedRoute,public router:Router,public dataService:DataService,\n    private http:HttpClient,private toastController: ToastController,private alertController: AlertController,private datePipe: DatePipe\n    ,private sanitizer: DomSanitizer) {\n    this.leavemngtUrl= this.dataService.base_path;\n    this.supervisorStatus = this.dataService.isSupervisor\n   }\n   loadImage() {\n    this.dataService.getImage(this.dataService.logopath, this.dataService.Oid).subscribe(\n      (imageBlob: Blob) => {\n        const imageUrl = URL.createObjectURL(imageBlob);\n        // console.log(\"image url\",imageUrl);\n        \n        this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(imageUrl);\n        // console.log(\"image src\",this.imageSrc);\n        \n      },\n      (error) => {\n        console.error('Failed to load image', error);\n      }\n    );\n  }\n  //  loadImage() {\n  //   const locallyStoredImage = localStorage.getItem('logoImage');\n  //   if (locallyStoredImage) {\n  //     // If the image is already stored locally, use it directly\n  //     this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(locallyStoredImage);\n  //   } else {\n  //     // If the image is not available locally, fetch it from the server and store it locally\n  //     this.dataService.getImage().subscribe(\n  //       (imageBlob: Blob) => {\n  //         const reader = new FileReader();\n  //         reader.onloadend = () => {\n  //           const base64data = reader.result as string;\n  //           this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(base64data);\n  //           // Store the image locally\n  //           this.storeImageLocally(base64data);\n  //         };\n  //         reader.readAsDataURL(imageBlob);\n  //       },\n  //       (error) => {\n  //         console.error('Failed to load image', error);\n  //       }\n  //     );\n  //   }\n  // }\n// Function to store the image in localStorage\n// storeImageLocally(base64data: string) {\n//   localStorage.setItem('logoImage', base64data);\n// }\n  ngOnInit() {\n    this.dataService.getpacount;\n    this.resConfig = this.dataService.confData;\n    this.userId    = this.dataService.Uid;\n    this.orgId    = this.dataService.Oid;\n    this.loadImage();\n    \n      this.activatedRoute.paramMap.subscribe(params => {\n        this.leaveId = +params.get('leaveId');\n        this.Uid = +params.get('userId');\n        this.Oid = +params.get('orgId');\n        this.getLeaveDetails();\n       \n        \n      });\n  }\n  getLeaveDetails() {\n    let leaveid = {\n      \"leaveId\": this.leaveId,\n      \"orgId\": this.Uid,\n      \"userId\": this.Oid\n    };\n  \n    this.getindividualdata=this.http.post(this.leavemngtUrl + '/leave/getlinfo', leaveid, this.dataService.jsonauthToken);\n      this.getindividualdata.subscribe(\n        (res: any) => {\n          this.getindividualdataRes = res['data'];\n          console.log(\"individual leave\", this.getindividualdataRes);\n         // Compare \"from\" date with current date\n      const leaveFromdt = new Date(this.getindividualdataRes.fromdt);\n      console.log(\"fronm date\",leaveFromdt);\n      \n      const currentDate = new Date();\n\n\n      this.isCancelEnabled = leaveFromdt > currentDate;\n        },\n        (error) => {\n          console.error(\"Error retrieving individual leave\", error);\n        }\n      );\n  }\n  approve(leaveId:number,userId:number,orgId:number,app_cmd:string){\n\n  //  if (!this.approval_comment.trim()) {\n  //   // Show a toast message if the approval comment is empty\n  //   this.showToast('Please enter an approval comment.');\n  \n    app_cmd='Approved'\n      let approvedata=\n      {\n        \"leaveId\":leaveId,\n        \"orgId\":orgId,\n        \"app_comments\":app_cmd,\n        \"userId\":userId\n        }\n        this.approveData = this.http.post(this.leavemngtUrl+'/lsupp/approve',JSON.stringify(approvedata),this.dataService.jsonauthToken);\n        this.approveData.subscribe(res=>{\n          this.approveRes=res;\n          console.log(\"approver Response Data\"+ JSON.stringify(this.approveRes));\n          const appStatus = this.approveRes[\"status\"]\n        if(appStatus ==='Success'){\n          const toastc = this.toastController.create({\n            message: this.approveRes['message'], // Use the response directly without parsing as JSON\n            position: 'middle',\n            buttons: [\n              {\n                text: 'OK',\n                role: 'ok',\n                handler: () => {\n                  // Handle button click if needed\n                  this.router.navigate(['/sup-dashboard'])\n                  console.log('OK clicked');\n                }\n              }\n            ]\n          }).then(toast => {\n            toast.present();\n          });\n        }\n          \n           // Call updateCount() method\n       this.updateCount(leaveId,status);\n        },\n        (error: HttpErrorResponse) => {\n          console.log(\"approve Error\" + error);\n          // Handle the error appropriately\n        });\n    \n\n  }\n  async showToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'middle'\n    });\n    toast.present();\n  }\n\n\n  updateCount(leaveId: number, status: string) {\n    if (status === 'NEW' && this.dataService.getpacount > 0 && leaveId === this.leaveId) {\n      this.dataService.getpacount -= 1; // Update the count in the data service\n    }\n  }\n\n  reject(leaveId:number,userId:number,orgId:number,ldays:number,ltype:string,app_cmd:string){\n    console.log(\"reject\",leaveId);\n    app_cmd='Rejected'\n    this.alertController.create({\n      header: 'Reject Leave Request',\n      inputs: [\n        {\n          name: 'comment',\n          type: 'text',\n          placeholder: 'Enter your comment',\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'Reject',\n          handler: async (data) => {\n            const rejectLeave = {\n              \"leaveId\": leaveId,\n              \"orgId\": orgId,\n              \"app_comments\": app_cmd,\n              \"userId\": userId,\n              \"leave_type\":ltype,\n              \"leave_taken\":ldays\n            };\n            try {\n              const res = await this.http.post(this.leavemngtUrl+'/lsupp/reject', JSON.stringify(rejectLeave), this.dataService.jsonauthToken).toPromise();\n              this.rejectRes = res;\n              console.log(\"Reject Response Data\" + JSON.stringify(this.rejectRes));\n              const rejStatus=this.rejectRes[\"status\"];\n              if(rejStatus ==='Success'){\n                const toast = await this.toastController.create({\n                  message: this.rejectRes['message'], // Use the response directly without parsing as JSON\n                  position: 'middle',\n                  buttons: [\n                    {\n                      text: 'OK',\n                      role: 'ok',\n                      handler: () => {\n                        // Handle button click if needed\n                        this.router.navigate(['/sup-dashboard'])\n                        console.log('OK clicked');\n                      }\n                    }\n                  ]\n                });\n                toast.present();\n              }\n            \n                       // Update the 'deleted' property of the item to true\n        // const deletedItem = this.getindividualdataRes.data.find((item: any) => item.leaveId === leaveId);\n        // if (deletedItem) {\n        //  deletedItem.deleted = true;\n        //  }\n\n     // Call updateCount() method\n     this.updateCount(leaveId,status);\n            } catch (error) {\n              console.log(\"reject Error\" + error);\n              // Handle the error appropriately\n            }\n          }\n        }\n      ]\n    }).then(alert => {\n      alert.present();\n    });\n   \n   \n    \n\n  }\n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // Add other headers if needed\n    }),\n  };\n  cancel(leaveId:number,userId:number,orgId:number){\n    console.log(\"cancel data\",leaveId,userId,orgId);\n    \n   \n    let cancelLeave=\n    {\n      \"leaveId\":leaveId,\n      \"orgId\":orgId,\n      \"userId\":userId\n      \n      }\n      console.log('Cancel Request Payload', JSON.stringify(cancelLeave));\n      this.cancelData = this.http.post<any>(`${this.leavemngtUrl}/lsupp/leave_cancel`,JSON.stringify(cancelLeave), this.dataService.jsonauthToken);\n      this.cancelData.subscribe(\n        (data) => {\n          this.cancelRes = data;\n          console.log('Cancel Response Data', JSON.stringify(this.cancelRes));\n        }\n      );\n      //     this.cancelRes = data;\n      //     console.log(\"cancel Response Data\" + this.cancelRes);\n      //     const canstatus=this.cancelRes['status']\n      //     if(canstatus==='Success'){\n      //       const toastc = this.toastController.create({\n      //         message: this.cancelRes['message'], // Use the response directly without parsing as JSON\n      //         duration: 2000,\n      //         position: 'middle'\n      //       }).then(toast => {\n      //         toast.present();\n      //       });\n      //     }\n          \n      //   // },\n      //   // (error: HttpErrorResponse) => {\n      //   //   console.log(\"cancel Error\" + error);\n      //   //   // Handle the error appropriately\n      //   }\n      // );\n    \n\n  }\n\n  dateFormat(dateString:string): string{\n    const date = new Date(dateString);\n    return this.datePipe.transform(date, 'yyyy-MM-dd')\n\n  }\n}\n","export default \"\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n          <ion-avatar>\\r\\n            <img [src]=\\\"imageSrc\\\" class=\\\"logo-image\\\" alt=\\\"Logo\\\">\\r\\n          </ion-avatar>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <div *ngIf=\\\"supervisorStatus\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-icon routerLink=\\\"/leave-application\\\" style=\\\"margin-left: 15px;\\\" slot=\\\"start\\\" name=\\\"notifications\\\"></ion-icon>\\r\\n          <ion-badge routerLink=\\\"/leave-application\\\" slot=\\\"start\\\" color=\\\"danger\\\" \\r\\n          style=\\\"position: absolute;margin-bottom:30px;border-radius: 10px;margin-left: 15px;\\\">{{this.dataService.getpacount}}\\r\\n          </ion-badge>\\r\\n          <ion-button routerLink=\\\"/search\\\" slot=\\\"start\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"search\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-buttons>      \\r\\n      </div>\\r\\n      <ion-menu-button slot=\\\"end\\\" class=\\\"menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>Leave Information</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ng-container *ngFor=\\\"let item of getindividualdataRes\\\">\\r\\n          <ion-item>\\r\\n            <ion-label>Dates</ion-label>\\r\\n            <ion-note slot=\\\"end\\\">{{ dateFormat(item.fromdt) }} / {{ dateFormat(item.todt) }}</ion-note>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Leave Type</ion-label>\\r\\n            <ion-note slot=\\\"end\\\">{{ item.leavetypeDesc }}</ion-note>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Reason</ion-label>\\r\\n            <ion-note slot=\\\"end\\\">{{ item.reason }}</ion-note>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label>Status</ion-label>\\r\\n            <ion-note slot=\\\"end\\\">{{ item.status }}</ion-note>\\r\\n          </ion-item>\\r\\n          <div *ngIf=\\\"!item.app_comments\\\">\\r\\n            <ion-item>\\r\\n              <ion-label class=\\\"comment-text\\\">Approver Comments</ion-label>\\r\\n              <ion-input slot=\\\"end\\\" [(ngModel)]=\\\"approval_comment\\\"   placeholder=\\\"{{item.app_comments}}\\\"></ion-input>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"item.APP_COMMENTS\\\">\\r\\n            <ion-item>\\r\\n              <ion-label class=\\\"comment-text\\\">App_Comments</ion-label>\\r\\n              <ion-note slot=\\\"end\\\" class=\\\"comment-text\\\">{{ item.app_comments }}</ion-note>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n          <br>\\r\\n        \\r\\n          <!-- <div class=\\\"ion-padding\\\"> -->\\r\\n            <ion-button color=\\\"tertiary\\\" [disabled]=\\\"item.status === 'APR'\\\" (click)=\\\"approve(item.leaveId,item.userId,item.orgId,item.app_comments)\\\">Approve</ion-button>\\r\\n            <ion-button  color=\\\"tertiary\\\" [disabled]=\\\"item.status === 'REJ'\\\" \\r\\n            (click)=\\\"reject(item.leaveId,item.userId,item.orgId,item.days,item.leavetypeDesc,item.app_comments)\\\">Reject</ion-button>\\r\\n            <ion-button   color=\\\"tertiary\\\" [disabled]=\\\"!isCancelEnabled\\\"  \\r\\n            (click)=\\\"cancel(item.leaveId,item.userId,item.orgId)\\\">Cancel </ion-button>\\r\\n          <!-- </div> -->\\r\\n        </ng-container>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n<ion-tab-bar class=\\\"tab\\\" slot=\\\"bottom\\\">\\r\\n  <div class=\\\"footer-buttons\\\">\\r\\n    <ion-tab-button tab=\\\"Order History\\\" routerLink=\\\"/supervisor\\\">\\r\\n      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>\\r\\n      <ion-label>Apply Leave</ion-label>\\r\\n    </ion-tab-button>\\r\\n    <ion-tab-button tab=\\\"View Brouchure\\\" routerLink=\\\"/sup-dashboard\\\">\\r\\n      <ion-icon name=\\\"person\\\"></ion-icon>\\r\\n      <ion-label>Sup-Dash</ion-label>\\r\\n    </ion-tab-button>\\r\\n    <ion-tab-button tab=\\\"login\\\" routerLink=\\\"/leave-application\\\">\\r\\n      <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n      <ion-label>Pending Approvals</ion-label>\\r\\n    </ion-tab-button>\\r\\n  </div>\\r\\n</ion-tab-bar>\\r\\n\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}