{"version":3,"file":"src_app_search_search_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AACa;IAW3C,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,2EAAuB,EAAC,kEAAmB;SAC5C;QACD,YAAY,EAAE,CAAC,oDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBqB;AACO;AAChB;AACQ;AAEM;AAEW;IAOrD,UAAU,SAAV,UAAU;IAarB,YAAqB,MAAc,EAAQ,SAAqB,EACtD,eAAgC,EAAQ,WAAuB,EAAS,IAAe,EACtF,SAAuB;QAFb,WAAM,GAAN,MAAM,CAAQ;QAAQ,cAAS,GAAT,SAAS,CAAY;QACtD,oBAAe,GAAf,eAAe,CAAiB;QAAQ,gBAAW,GAAX,WAAW,CAAY;QAAS,SAAI,GAAJ,IAAI,CAAW;QACtF,cAAS,GAAT,SAAS,CAAc;QAT3B,mBAAc,GAAK,EAAE,CAAC;QAUzB,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;IACvD,CAAC;IACD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAClF,CAAC,SAAe,EAAE,EAAE;YAClB,MAAM,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAChD,qCAAqC;YAErC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;YAChE,0CAA0C;QAE5C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IACD,gBAAgB;IAChB,kEAAkE;IAClE,8BAA8B;IAC9B,iEAAiE;IACjE,iFAAiF;IACjF,aAAa;IACb,8FAA8F;IAC9F,6CAA6C;IAC7C,+BAA+B;IAC/B,2CAA2C;IAC3C,qCAAqC;IACrC,wDAAwD;IACxD,+EAA+E;IAC/E,uCAAuC;IACvC,gDAAgD;IAChD,aAAa;IACb,2CAA2C;IAC3C,WAAW;IACX,qBAAqB;IACrB,wDAAwD;IACxD,UAAU;IACV,SAAS;IACT,MAAM;IACN,IAAI;IACN,8CAA8C;IAC9C,0CAA0C;IAC1C,mDAAmD;IACnD,IAAI;IAGJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC5C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAGD,MAAM;QACJ,IAAI,QAAQ,GAAE;YACZ,YAAY,EAAC,IAAI,CAAC,IAAI;SACvB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAC,mBAAmB,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAChG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,GAAE;YAC/B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEzD,CAAC,CAAC,CAAC;IAGL,CAAC;IAGD,eAAe,CAAC,MAAc,EAAE,IAAS;QACvC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAChC,IAAI,EAAE,GAAG,MAAM,CAAC;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,2BAA2B;QAC/D,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,UAAU,CAAC,CAAC;QAG1C,IAAI,UAAU,KAAK,cAAc,EAAE;YACjC,6DAA6D;YAC7D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SACrE;aAAM;YACL,2EAA2E;YAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SACvE;IACH,CAAC;CAIF;;YAtHQ,mDAAM;YAGN,+DAAW;YAFX,2DAAe;YAEf,+DAAW;YALX,4DAAU;YAOV,mEAAY;;AAOR,UAAU;IALtB,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mKAAiC;;KAElC,CAAC;GACW,UAAU,CA0GtB;AA1GsB;;;;;;;;;;;;;;;ACdvB,iEAAe,gdAAgd,oLAAoL,mBAAmB,oBAAoB,kBAAkB,KAAK,6BAA6B,8YAA8Y,mBAAmB,q8BAAq8B,cAAc,8GAA8G,WAAW,oHAAoH,eAAe,+uBAA+uB","sources":["./src/app/search/search-routing.module.ts","./src/app/search/search.module.ts","./src/app/search/search.page.ts","./src/app/search/search.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPage } from './search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPageRoutingModule } from './search-routing.module';\n\nimport { SearchPage } from './search.page';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SearchPageRoutingModule,Ng2SearchPipeModule\n  ],\n  declarations: [SearchPage]\n})\nexport class SearchPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../services/data.service';\nimport { SearchPageModule } from './search.module';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage implements OnInit {\n  getcount:any;\n  imageSrc: SafeUrl;\n\n  name: any;\n  private empNameData: Observable<any>;\n  public empNameresData:any=[];\n\n  item:any;\n  leavemngtUrl:any;\n\n  supervisorStatus:boolean;\n\n  constructor( private router: Router,public leavemgmt:DataService, \n    private modalController: ModalController,public dataService:DataService,private http:HttpClient\n    ,private sanitizer: DomSanitizer) { \n      this.leavemngtUrl= this.dataService.base_path;\n      this.supervisorStatus = this.dataService.isSupervisor\n    }\n    loadImage() {\n      this.dataService.getImage(this.dataService.logopath, this.dataService.Oid).subscribe(\n        (imageBlob: Blob) => {\n          const imageUrl = URL.createObjectURL(imageBlob);\n          // console.log(\"image url\",imageUrl);\n          \n          this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(imageUrl);\n          // console.log(\"image src\",this.imageSrc);\n          \n        },\n        (error) => {\n          console.error('Failed to load image', error);\n        }\n      );\n    }\n    // loadImage() {\n    //   const locallyStoredImage = localStorage.getItem('logoImage');\n    //   if (locallyStoredImage) {\n    //     // If the image is already stored locally, use it directly\n    //     this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(locallyStoredImage);\n    //   } else {\n    //     // If the image is not available locally, fetch it from the server and store it locally\n    //     this.dataService.getImage().subscribe(\n    //       (imageBlob: Blob) => {\n    //         const reader = new FileReader();\n    //         reader.onloadend = () => {\n    //           const base64data = reader.result as string;\n    //           this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(base64data);\n    //           // Store the image locally\n    //           this.storeImageLocally(base64data);\n    //         };\n    //         reader.readAsDataURL(imageBlob);\n    //       },\n    //       (error) => {\n    //         console.error('Failed to load image', error);\n    //       }\n    //     );\n    //   }\n    // }\n  // Function to store the image in localStorage\n  // storeImageLocally(base64data: string) {\n  //   localStorage.setItem('logoImage', base64data);\n  // }\n\n\n  ngOnInit() {\n    this.getcount = this.dataService.getpacount;\n    this.loadImage();\n  }\n \n\n  search(){\n    let emp_Name ={\n      \"srchbyname\":this.name\n    }\n    this.empNameData = this.http.post(this.leavemngtUrl+'/lsupp/srchbyteam',JSON.stringify(emp_Name),\n    this.dataService.jsonauthToken);\n    this.empNameData.subscribe(data=>{\n      this.empNameresData=data;\n      console.log(\"response emp search\",this.empNameresData);\n      \n    });\n\n\n  }\n\n \n  goempleaveapply(userId: number, name: any) {\n    console.log(\"user id \", userId);\n    let id = userId;\n    let ename = name;\n    \n    const sourcePage = this.router.url; // Get the current page URL\n    console.log(\"source page out\",sourcePage);\n    \n  \n    if (sourcePage === '/report-page') {\n      // Navigate to the report page with the corresponding user ID\n      this.router.navigate(['/report-page', { userId: id, name: ename }]);\n    } else {\n      // Navigate to the employee leave apply page with the corresponding user ID\n      this.router.navigate(['/empleaveapply', { userId: id, name: ename }]);\n    }\n  }\n  \n  \n\n}\n\n\n","export default \"\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n          <ion-avatar>\\n            <img [src]=\\\"imageSrc\\\" class=\\\"logo-image\\\" alt=\\\"Logo\\\">\\n          </ion-avatar>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <div *ngIf=\\\"supervisorStatus\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-icon routerLink=\\\"/leave-application\\\" style=\\\"margin-left: 15px;\\\" slot=\\\"start\\\" name=\\\"notifications\\\"></ion-icon>\\n          <ion-badge routerLink=\\\"/leave-application\\\" slot=\\\"start\\\" color=\\\"danger\\\" \\n          style=\\\"position: absolute;margin-bottom:30px;border-radius: 10px;margin-left: 15px;\\\">{{this.dataService.getpacount}}\\n          </ion-badge>\\n          <ion-button routerLink=\\\"/search\\\" slot=\\\"start\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"search\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n        \\n      </div>\\n      <ion-menu-button slot=\\\"end\\\" class=\\\"menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n<h3 style=\\\"font-weight: 800;text-align: center;\\\">Team Leave</h3>\\n    <ion-grid class=\\\"ion-text-center\\\">\\n\\n      <ion-row class=\\\"ion-margin\\\">\\n        <ion-col>\\n          <ion-title>\\n            <ion-text color=\\\"default\\\">\\n              <ion-searchbar [(ngModel)]=\\\"name\\\" \\n               showcancelButton=\\\"focus\\\" animated></ion-searchbar>\\n             <ion-button class=\\\"ion-float-right\\\" (click)=\\\"search()\\\">Search</ion-button><br>\\n            </ion-text>\\n          </ion-title>\\n        </ion-col>\\n      </ion-row>\\n  \\n      <ion-row class=\\\"header-row\\\">\\n        <ion-col>\\n          <ion-text>EmpId</ion-text>\\n        </ion-col>\\n  \\n        <ion-col>\\n          <ion-text>Name</ion-text>\\n        </ion-col>\\n  \\n        <ion-col>\\n          <ion-text>Email</ion-text>\\n        </ion-col>\\n      </ion-row>\\n  \\n  \\n      <ion-row *ngFor=\\\"let item of empNameresData.data\\\">\\n        <ion-col>\\n          <ion-text (click)=\\\"goempleaveapply(item.user_id, item.name)\\\">\\n            {{item.empl_id}}\\n          </ion-text>\\n        </ion-col>\\n  \\n          <ion-col>\\n            <ion-text>\\n              {{item.name}}\\n            </ion-text>\\n          </ion-col>\\n    \\n          <ion-col>\\n            <ion-text>\\n              {{item.email_id}}\\n            </ion-text>\\n          </ion-col>\\n      </ion-row>\\n  \\n    </ion-grid>\\n\\n\\n  \\n  \\n</ion-content>\\n<ion-tab-bar class=\\\"tab\\\" slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"Order History\\\" routerLink=\\\"/supervisor\\\">\\n      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>\\n      <ion-label>Apply Leave</ion-label>\\n    </ion-tab-button>\\n    <ion-tab-button tab=\\\"View Brouchure\\\" routerLink=\\\"/sup-dashboard\\\">\\n      <ion-icon name=\\\"person\\\"></ion-icon>\\n      <ion-label>Sup-Dash</ion-label>\\n    </ion-tab-button>\\n    <ion-tab-button tab=\\\"login\\\" routerLink=\\\"/leave-application\\\">\\n      <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n      <ion-label>Pending Approvals</ion-label>\\n    </ion-tab-button>\\n\\n</ion-tab-bar>\\n\\n\";"],"names":[],"sourceRoot":"webpack:///"}